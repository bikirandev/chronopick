let classes =
      "w-10 h-10 flex items-center justify-center rounded-full cursor-pointer transition-colors duration-150 ease-in-out text-sm relative ";

    if (dayStates.includes(DayState.Disabled)) {
      classes +=
        "text-gray-400 cursor-not-allowed bg-gray-100 dark:bg-slate-700 dark:text-slate-500 ";
    } else {
      // General hover for non-disabled days
      classes += "hover:bg-blue-100 dark:hover:bg-blue-800 ";
    }

    if (
      dayStates.includes(DayState.Today) &&
      !dayStates.includes(DayState.Selected) &&
      !dayStates.includes(DayState.InRange)
    ) {
      // Style for "today" if it's not selected or part of a range
      classes +=
        "text-blue-600 dark:text-blue-400 font-semibold border border-blue-500 dark:border-blue-700 ";
    }

    if (dayStates.includes(DayState.Selected)) {
      // Base style for any selected day (single, multiple, range start/end)
      classes +=
        "bg-blue-600 text-white hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-400 ";
    }

    // Specific styles for range selection
    if (
      dayStates.includes(DayState.StartRange) ||
      dayStates.includes(DayState.EndRange)
    ) {
      // Stronger background for range start/end points
      classes += "bg-blue-700 text-white dark:bg-blue-600 ";
    }
    if (
      dayStates.includes(DayState.InRange) &&
      !dayStates.includes(DayState.Selected) &&
      !dayStates.includes(DayState.StartRange) &&
      !dayStates.includes(DayState.EndRange)
    ) {
      // Style for days within a selected range (not start/end)
      classes +=
        "bg-blue-200 text-blue-800 dark:bg-blue-700 dark:text-blue-200 rounded-none "; // Remove rounding for continuous range feel
    }

    // Adjust rounding for start/end of range to connect visually with InRange days
    if (
      dayStates.includes(DayState.StartRange) &&
      dayStates.includes(DayState.InRange) &&
      !dayStates.includes(DayState.EndRange)
    ) {
      classes += "rounded-r-none "; // Flatten right edge if it's start of range and also in range
    }
    if (
      dayStates.includes(DayState.EndRange) &&
      dayStates.includes(DayState.InRange) &&
      !dayStates.includes(DayState.StartRange)
    ) {
      classes += "rounded-l-none "; // Flatten left edge if it's end of range and also in range
    }

    // Hover effect for range selection preview
    if (
      dayStates.includes(DayState.HoverRange) &&
      !dayStates.includes(DayState.Selected)
    ) {
      classes += "bg-blue-100 dark:bg-blue-800 ";
    }

    // Keyboard focus indicator (pink ring)
    if (
      focusedDate &&
      isSameDay(day, focusedDate) &&
      !dayStates.includes(DayState.Disabled)
    ) {
      classes +=
        "ring-2 ring-offset-1 ring-offset-white dark:ring-offset-slate-800 ring-pink-500 ";
    }
    return classes.trim(); // Trim any trailing space
  };

// Style
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom global styles previously in index.html */

/* Custom scrollbar for better aesthetics across the application */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  background: #2d3748; /* Default dark mode track */
  border-radius: 10px;
}
html.dark ::-webkit-scrollbar-track {
  background: #2d3748; /* Explicit dark mode track */
}
html:not(.dark) ::-webkit-scrollbar-track {
  background: #f1f1f1; /* Light mode track */
}

::-webkit-scrollbar-thumb {
  background: #718096; /* Default dark mode thumb */
  border-radius: 10px;
}
html.dark ::-webkit-scrollbar-thumb {
  background: #718096; /* Explicit dark mode thumb */
}
html:not(.dark) ::-webkit-scrollbar-thumb {
  background: #888; /* Light mode thumb */
}

::-webkit-scrollbar-thumb:hover {
  background: #a0aec0; /* Default dark mode thumb hover */
}
html.dark ::-webkit-scrollbar-thumb:hover {
  background: #a0aec0; /* Explicit dark mode thumb hover */
}
html:not(.dark) ::-webkit-scrollbar-thumb:hover {
  background: #555; /* Light mode thumb hover */
}